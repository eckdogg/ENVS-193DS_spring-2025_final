---
title: " ENVS193DS Final"
author: Owen Eckweiler
date: 6/10/2025
editor: source
format:
  html:
    toc: true # use this to display a table of contents
execute:
  message: false # use this to make sure messages don't show up
  warning: false # use this to make sure warnings don't show up
---

# Repository Link

<https://github.com/eckdogg/ENVS-193DS_spring-2025_final.git>


# Set up

```{r}
library("tidyverse")
library("here")
library("janitor")
library("tibble")

sst <- read_csv(here("data", "SST_update2023.csv"))
```


## Problem 1. Research writing

## a. In part 1, they used a Pearson's r correlation test. In part 2, they used a one-way ANOVA test.

## b. 


## Problem 2. Data visualization

## a.

```{r}
sst_clean <- sst |>
  mutate(date = ymd(date),
         year = factor(year(date), levels = 2018:2023),
         month = month(date, label = TRUE, abbr = TRUE)) |>
  filter(!is.na(year)) |>
  group_by(year, month) |>
  summarize(mean_monthly_sst = round(mean(temp, na.rm = TRUE), 1),
            .groups = "drop")

sst_clean |> 
  slice_sample(n = 5)

str(sst_clean)
```

## b.

```{r}
ggplot(sst_clean, aes(x = month, y = mean_monthly_sst, group = year, color = year)) +
  geom_line(size = 0.8) +
  geom_point(size = 1.5) +
  labs(
    x = "Month",
    y = "Mean monthly sea surface temperature (Â°C)",
    color = "Year"
  ) +
  scale_color_manual(
    values = c(
      "2018" = "#deebf7",  
      "2019" = "#c6dbef",
      "2020" = "#9ecae1",
      "2021" = "#6baed6",
      "2022" = "#3182bd",
      "2023" = "#08519c"   
    )
  ) +
  scale_y_continuous(limits = c(12, 20)) +
  theme_minimal(base_size = 14) +
  theme(
    legend.position = "left",
    plot.margin = margin(t = 10, r = 10, b = 10, l = 30),
    axis.title.y = element_text(margin = margin(r = 10)),
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    panel.background = element_blank()
  ) +
  theme_minimal(base_size = 14) +
theme(
  legend.position = "left",
  plot.margin = margin(t = 10, r = 10, b = 10, l = 30),
  axis.title.y = element_text(margin = margin(r = 10)),
  panel.grid.major = element_blank(),
  panel.grid.minor = element_blank(),
  panel.background = element_blank(),
  panel.border = element_rect(color = "black", fill = NA, linewidth = 0.5)
) +
     theme(
    legend.position = c(0.00, 1.04),  # x = 0% from left, y = 104% from bottom
    legend.justification = c("left", "top"),  
  )
```

```

